OO基础：封装、抽象、继承、多态

设计原则：
1.封装变化点：把会变化的部分取出并封装起来，以便以后可以轻易地改动或者拓充此部分，而不影响其他不需要变化的部分。
2.针对接口编程，而不是针对实现编程。
3.多用组合，少用继承。
4.为交互对象之间的松耦合设计而努力。
5.对修改关闭，对拓展开放。
6.要依赖抽象，不要依赖具体类。（依赖倒置）
7.最小知识原则。
8.好莱坞原则：别调用我们，我们会调用你。

一问一答：
1.问：用一个类来代表一个行为，感觉似乎有点奇怪，类不是应该代表某种“东西”吗？类不是应该同时具备“状态”与“行为”吗？
答：在OO范式的系统中，是的，类代表的东西一般是既有状态（成员变量）又有行为（成员方法）。只是在本例中，碰巧“东西”是一个行为。
        但是即使是行为，也仍然可以有状态和行为，例如，飞行的行为可以具有成员变量，记录飞行行为的属性（每秒翅膀拍动几下，最大高度和速度等）